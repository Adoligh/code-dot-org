- # TODO OFFLINE
- @page_title = level_title
= render partial: 'shared/sharing_meta_tags'

- if @game.unplugged?
- elsif @level.is_a?(DSLDefined)
  = render partial: "levels/#{@level.class.to_s.underscore}"
  #reference_area{style: 'width: 400px'}
- elsif @level.is_a?(Blockly) && @level.embed == 'true' && !@edit_blocks
  #title
    %h4{style: 'margin-left: auto; margin-right: auto; max-width: 800px;'}!= @level.properties['instructions']
  - # Pass special parameters to Blockly partial for embedded level type.
  - # TODO OFFLINE: {embed: true, hide_source: true, no_padding: true, show_finish: true}
  #reference_area
- else
  #reference_area
#application

- # TODO OFFLINE: hide this, or attach the cookie via the script callback URL?
- if @script.try(:hoc?) && (@script_level.try(:chapter) == 1 || @script_level.try(:position) == 1)
  -# special tracking image to make sure a cookie is set when hoc starts (/hoc/1)
  = image_tag(tracking_pixel_url(@script))

- # TODO OFFLINE: client-side callback to pop up admin tools
- if current_user.try(:admin?)
  = render partial: 'levels/admin'

// TODO OFFLINE: How should we package this
%script{src: '/shared/js/apps_api.js'}
